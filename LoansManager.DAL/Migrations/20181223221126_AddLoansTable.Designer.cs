// <auto-generated />
using System;
using LoansManager.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoansManager.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181223221126_AddLoansTable")]
    partial class AddLoansTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LoansManager.Domain.LoanEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BorrowerId");

                    b.Property<decimal>("CommitmentValue");

                    b.Property<bool>("IsRepaid");

                    b.Property<string>("LenderId");

                    b.Property<DateTime?>("RepaidDate");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerId");

                    b.HasIndex("LenderId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("LoansManager.Domain.UserEntity", b =>
                {
                    b.Property<string>("UserName")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("Salt");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LoansManager.Domain.LoanEntity", b =>
                {
                    b.HasOne("LoansManager.Domain.UserEntity", "Borrower")
                        .WithMany()
                        .HasForeignKey("BorrowerId");

                    b.HasOne("LoansManager.Domain.UserEntity", "Lender")
                        .WithMany()
                        .HasForeignKey("LenderId");
                });
#pragma warning restore 612, 618
        }
    }
}
